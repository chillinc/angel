#!/bin/bash -e
### BEGIN INIT INFO
# Provides:          Framework for running our versioned codebase
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# X-Interactive:     false
# Short-Description: Manage our services
### END INIT INFO

ENV="env -i LANG=C PATH=/usr/local/bin:/usr/bin:/bin"
CONTROL_SCRIPT=/usr/bin/helloworld
# Below doesn't work with rc.N symlinks:
# CONTROL_SCRIPT=/usr/bin/`basename $0`  # Use name of init.d file to figure out name of control script

set -e

if [ "$2" != "" ] ; then
        echo "Error: service command does not support options. Try '$CONTROL_SCRIPT service $1 $2 ...'"
        exit 1
fi


if [ ! -x $CONTROL_SCRIPT ] ; then
	echo "Error: control script missing or not executable ($CONTROL_SCRIPT)"
	exit 1
fi

. /lib/lsb/init-functions


check_root () {
	if [ "x0" != "x`id -u`" ] ; then
		echo "Must be root."
		exit 1
	fi
}

case $1 in
	start)
		check_root

		# start is called by init.d during startup,
		# so we'll check for upgrades and attempt to auto-conf the system as well.
		# Removing this here will cause AMI images to boot and run potentiall very old versions.

		echo "Checking for upgrades..."
		$CONTROL_SCRIPT package upgrade || true # To-do: add logic that checks currently-installed version against min-allowed version in zookeeper

	# To-do: run autoconf -- for now, this'll fail on pre-autoconf enabled nodes and halt their startup
	#	echo "Updating conf..."
	#	$CONTROL_SCRIPT package autoconf

		echo "Starting services..."
		$CONTROL_SCRIPT service start
	;;

	stop)
		check_root
		$CONTROL_SCRIPT service stop
	;;

	restart)
		check_root
		$CONTROL_SCRIPT service restart
	;;

	force-reload)
		check_root
		$CONTROL_SCRIPT service stop
		$CONTROL_SCRIPT service start
	;;

	status)
		# return status exit code so that external scripts can use this:
		exec $CONTROL_SCRIPT status
	;;

	*)
		log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
		exit 1
	;;
esac
