
# Increase vm.max_map_count from 65k to 128k, per DSE advice for cassandra:
vm.max_map_count=131072

# Descrease fin timeout from 60 seconds to 10, so we can reuse high numbered ports faster:
net.ipv4.tcp_fin_timeout=10

# Disable timestamps in TCP, both for packet size and so we don't leak node info:
net.ipv4.tcp_timestamps=0

# Do not use tcp socket recycles -- there is old advice to use it based on local-network testing but it's bad in the wild:
net.ipv4.tcp_tw_recycle=0

# Increase port range:
net.ipv4.ip_local_port_range = 10000 65535

# Increase socket backlog:
net.core.somaxconn=4096

# Allow kernel to overcommit RAM -- this is needed for redis to be able to do bg saves under high mem usage:
# To-do: confirm ok and figure out migration strategy
# vm.overcommit_memory=1

# Prevent tcp reverting to slow start on persistent connections:
net.ipv4.tcp_slow_start_after_idle = 0

# Increase allowed syn backlog (default value is 1024, undocumented limit of 65k; this just sets the max; application has to also set it):
net.ipv4.tcp_max_syn_backlog=8096

# Drop syn retries to 2 (default is 5):
net.ipv4.tcp_syn_retries=2

# Increase send/receive buffer sizes (defaults are 4096 87380 4194304 and 4096 16384 4194304):
net.ipv4.tcp_rmem = 4096  87380  16777216
net.ipv4.tcp_wmem = 4096  65536  16777216

# Increase tw buckets from default of 131072:
net.ipv4.tcp_max_tw_buckets = 1048576

# Increase receive buffer sizes from default of 212992 (general recommendation to avoid UDP dropped packets but not based on anything we saw):
net.core.rmem_default = 1048576
net.core.rmem_max = 1048576
